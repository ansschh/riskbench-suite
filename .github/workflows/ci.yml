name: CI & Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install deps
        run: poetry install --no-interaction --with dev
      - name: Pre-commit checks
        run: poetry run pre-commit run --all-files

  test:
    needs: lint-and-typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install deps
        run: poetry install --no-interaction
      - name: Run pytest
        run: poetry run pytest --maxfail=1 --disable-warnings -q
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Build and publish PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $POETRY_PYPI_TOKEN_PYPI
          poetry publish --build
      - name: Build Docker images
        run: |
          docker build -f docker/Dockerfile.cli -t yourorg/riskbench-cli:${{ github.ref_name }} .
          docker build -f docker/Dockerfile.dashboard -t yourorg/riskdash:${{ github.ref_name }} dashboard
      - name: Push Docker images
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker push yourorg/riskbench-cli:${{ github.ref_name }}
          docker push yourorg/riskdash:${{ github.ref_name }}
      - name: Publish NPM Dashboard
        run: |
          cd dashboard
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm publish --access public
